{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","aimationDuration","infinite","maximumScroll","length","curentTranslate","loopTrigger","isValindScroll","direction","calculatedTranslatePrev","calculatedTranslateNext","ul","document","querySelector","style","transform","onButtonClick","button","btnPrev","classList","contains","btnNext","btnPrevQuery","btnNextQuery","disabled","className","width","transition","map","image","height","src","alt","indexOf","type","onClick","e","target","App","state","submitHandler","preventDefault","inputs","value","trim","setState","checked","this","action","onSubmit","defaultValue","min","name","React","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.26b13696.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  aimationDuration: number,\n  infinite: boolean,\n};\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  aimationDuration,\n  infinite,\n}) => {\n  const maximumScroll = itemWidth * images.length - frameSize * itemWidth;\n  let curentTranslate = 0;\n  let loopTrigger = false;\n\n  const isValindScroll = (direction: string) => {\n    const calculatedTranslatePrev = curentTranslate + step * itemWidth;\n    const calculatedTranslateNext = curentTranslate - step * itemWidth;\n    const ul = document.querySelector<HTMLElement>('.Carousel__list');\n\n    if (curentTranslate === 0 || curentTranslate === -maximumScroll) {\n      loopTrigger = true;\n    }\n\n    switch (direction) {\n      case 'prev':\n        if (calculatedTranslatePrev > 0 && loopTrigger && infinite) {\n          curentTranslate = -maximumScroll;\n          loopTrigger = false;\n        } else if (calculatedTranslatePrev > 0) {\n          curentTranslate = 0;\n        } else {\n          curentTranslate += step * itemWidth;\n          loopTrigger = false;\n        }\n\n        break;\n      case 'next':\n        if (calculatedTranslateNext < -maximumScroll\n            && loopTrigger\n            && infinite\n        ) {\n          curentTranslate = 0;\n          loopTrigger = false;\n        } else if (calculatedTranslateNext < -maximumScroll) {\n          curentTranslate = -maximumScroll;\n        } else {\n          curentTranslate -= step * itemWidth;\n          loopTrigger = false;\n        }\n\n        break;\n      default: curentTranslate = 0;\n    }\n\n    if (ul) {\n      ul.style.transform = `translateX(${curentTranslate}px)`;\n    }\n  };\n\n  const onButtonClick = (button: HTMLInputElement) => {\n    const btnPrev = button.classList.contains('Carousel__button-Prev');\n    const btnNext = button.classList.contains('Carousel__button-Next');\n\n    const btnPrevQuery = document\n      .querySelector('.Carousel__button-Prev');\n    const btnNextQuery = document\n      .querySelector('.Carousel__button-Next');\n\n    switch (true) {\n      case btnPrev:\n        isValindScroll('prev');\n        break;\n      case btnNext:\n        isValindScroll('next');\n        break;\n      default: curentTranslate = 0;\n    }\n\n    if (curentTranslate === 0 && !infinite) {\n      (btnPrevQuery as HTMLInputElement).disabled = true;\n    } else {\n      (btnPrevQuery as HTMLInputElement).disabled = false;\n    }\n\n    if (curentTranslate === -maximumScroll && !infinite) {\n      (btnNextQuery as HTMLInputElement).disabled = true;\n    } else {\n      (btnNextQuery as HTMLInputElement).disabled = false;\n    }\n  };\n\n  return (\n    <div className=\"Carousel\" style={{ width: `${frameSize * itemWidth}px` }}>\n      <div className=\"Carousel__container\">\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            width: `${itemWidth * 10}px`,\n            transition: `all ${aimationDuration}ms`,\n          }}\n        >\n          {images.map(image => (\n            <li\n              className=\"Carousel__list-item\"\n              key={image}\n            >\n              <img\n                className=\"Carousel__list-image\"\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n                src={image}\n                alt={`${images.indexOf(image)}`}\n              />\n            </li>\n          ))}\n        </ul>\n        <button\n          className=\"Carousel__button Carousel__button-Prev\"\n          type=\"button\"\n          onClick={e => {\n            onButtonClick((\n              e.target as HTMLInputElement\n            ));\n          }}\n        >\n          {'<'}\n        </button>\n        <button\n          data-cy=\"next\"\n          className=\"Carousel__button Carousel__button-Next\"\n          type=\"button\"\n          onClick={e => {\n            onButtonClick((\n              e.target as HTMLInputElement\n            ));\n          }}\n        >\n          {'>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  aimationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    aimationDuration: 1000,\n    infinite: false,\n  };\n\n  submitHandler = (e: any) => {\n    e.preventDefault();\n    const inputs = [...e.target];\n\n    const [itemWidth, frameSize, step, aimationDuration, infinite] = inputs;\n\n    if (!itemWidth.value.trim().length) {\n      this.setState({ itemWidth: 130 });\n      itemWidth.value = 130;\n    } else {\n      this.setState({ itemWidth: +(itemWidth.value) });\n    }\n\n    if (!itemWidth.value.trim().length) {\n      this.setState({ frameSize: 3 });\n      frameSize.value = 3;\n    } else {\n      this.setState({ frameSize: +(frameSize.value) });\n    }\n\n    if (!itemWidth.value.trim().length) {\n      this.setState({ step: 3 });\n      step.value = 3;\n    } else {\n      this.setState({ step: +(step.value) });\n    }\n\n    if (!itemWidth.value.trim().length) {\n      this.setState({ aimationDuration: 1000 });\n      aimationDuration.value = 1000;\n    } else {\n      this.setState({ aimationDuration: +(aimationDuration.value) });\n    }\n\n    this.setState({ infinite: infinite.checked });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      aimationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          aimationDuration={aimationDuration}\n          infinite={infinite}\n        />\n        <form\n          action=\"submit\"\n          className=\"Inputs\"\n          onSubmit={this.submitHandler}\n        >\n          <label\n            className=\"Inputs__input\"\n          >\n            Enter image width\n            <input\n              defaultValue={130}\n              type=\"number\"\n              min={0}\n            />\n          </label>\n          <label\n            className=\"Inputs__input\"\n          >\n            Enter frame size\n            <input\n              defaultValue={3}\n              type=\"number\"\n              min={0}\n            />\n          </label>\n          <label\n            className=\"Inputs__input\"\n          >\n            Entre scroll steps\n            <input\n              defaultValue={3}\n              type=\"number\"\n              min={0}\n            />\n          </label>\n          <label\n            className=\"Inputs__input\"\n          >\n            Enter animation duration in ms\n            <input\n              defaultValue={1000}\n              type=\"number\"\n              min={0}\n            />\n          </label>\n          <label\n            className=\"Inputs__input Inputs__input-checkbox\"\n          >\n            Check for infinite loop\n            <input\n              type=\"checkbox\"\n            />\n          </label>\n          <input\n            className=\"Inputs__button\"\n            type=\"submit\"\n            name=\"button\"\n            value=\"submit\"\n          />\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}